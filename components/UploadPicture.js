import { CameraIcon, ChevronLeftIcon, XIcon } from "@heroicons/react/outline";
import React, { useRef, useState } from "react";
import { useRouter } from "next/router";
import Image from "next/image";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import Head from "next/head";
import axios from "axios";

const UploadPicture = () => {
  const router = useRouter();
  const filePickerRef = useRef(null);
  const [selectedFile, setSelectedFile] = useState(null);
  const [image, setImage] = useState();
  const fileSelectedHandler = (e) => {
    const reader = new FileReader();
    setImage(e.target.files[0]);
    console.log("------------------>", e.target.files[0]);
    if (e.target.files[0]) {
      reader.readAsDataURL(e.target.files[0]);
    }

    reader.onload = (readerEvent) => {
      setSelectedFile(readerEvent.target.result);
    };
    // setSelectedFile(e.target.files[0]);
  };

  const fileUploadHandler = () => {
    if (!selectedFile) {
      toast.error("Please select an image");
    } else {
      upload(image);
      // router.push({ pathname: "/selfie", query: selectedFile });
    }
  };
  const upload = async (image) => {
    // console.log("===========>", image);
    const JWT = localStorage.getItem("JWT");
    const formData = new FormData();
    formData.append("file", image);
    try {
      let fata = await axios.post(
        "http://54.144.168.52:3000/media/upload",
        formData,
        {
          headers: {
            "Content-Type": "multipart/form-data",
            authorization: JWT,
          },
        }
      );
      console.log(fata?.data.Status, "api payload");
      if (fata?.data.Status == 200) {
        setSelectedFile("");
        // if (!fata?.data?.Data?.User?.Media) {
        toast.success(fata?.data?.Message);
        setTimeout(() => {
          router.push("/selfie");
        }, 1500);
        // } else if (!fata?.data?.Data?.User?.SelfieMedia) {
        //   router.push("/selfie");
        // } else {
        //   localStorage.setItem("user", fata?.data?.Data?.User);
        //   localStorage.setItem("JWT", fata?.data?.Data?.Token);
        //   router.push("/home");
        // }
      } else {
        // toast.error(fata?.data?.Message);
        // console.log(fata, "api payload");
        toast.error(fata?.data?.Message);
        throw new Error(fata?.data);
      }
    } catch (error) {
      toast.error(error);
      console.log(error, "api payload");
    }
  };
  return (
    <div className="bg-white">
      <Head>
        <title>Event Buddy</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/appicon.png" />
      </Head>
      <div className="max-w-md p-2 mx-auto mt-14 ">
        <h1 className="sm:font-extrabold text-[#0E134F] md:text-[34px] leading-10 text-[21px] font-lgstrong text-center sm:px-2 px-1 font-bold flex items-center">
          <span
            className="flex-grow-0 float-left sm:hidden"
            onClick={() => router.push("/login")}
          >
            <ChevronLeftIcon className="h-6 w-6 text-[#E9813B]" />
          </span>
          <span className="flex-grow">Upload Profile Picture</span>
        </h1>

        {/* camera here */}
        {!selectedFile && (
          <div className="sm:mt-16 bg-gray-100 border sm:w-[70%] mx-auto  rounded-full sm:py-[114px] px-2 w-[225px] py-[80px] mt-12">
            <CameraIcon
              onClick={() => filePickerRef.current.click()}
              className="mx-auto text-center text-gray-300 cursor-pointer h-14 sm:h-16 w-18"
            />
            <input
              ref={filePickerRef}
              type="file"
              className="hidden"
              onChange={fileSelectedHandler}
            />
          </div>
        )}

        {/* Image Preview  */}
        {selectedFile && (
          <div className="relative mt-12  sm:mt-16 sm:w-[300px] sm:h-[290px] mx-auto rounded-full w-[220px] h-[215px] ">
            <div className=" bg-gray-100 relative border sm:w-[300px] sm:h-[290px] mx-auto  rounded-full sm:py-[114px] px-2 w-[220px] h-[220px] py-[80px] ">
              <Image
                src={selectedFile}
                alt="infoImg"
                layout="fill"
                className="rounded-full"
                objectfit="cover"
              />
            </div>
            <XIcon
              onClick={() => setSelectedFile(null)}
              className="absolute top-0 w-8 h-8 p-1 text-gray-500 bg-white border rounded-full cursor-pointer right-11"
            />
          </div>
        )}
        {/* Image Preview ==^ */}

        <p className="pl-5 pr-2 text-center max-w-[370px] md:text-[20px] text-[15px] mx-auto mt-10  font-mediumm text-[#42526E] opacity-75 leading-[23px]">
          Please make sure to be in a spot with sufficient light on your face.
        </p>
        <button
          onClick={fileUploadHandler}
          className="font-mediumm sm:mx-8 bg-[#FCEDE4] bg-gradient-to-tr  py-[10px] sm:py-3 px-7 rounded-full text-[#E77334]  sm:w-[90%] w-[100%] mt-10 "
        >
          Upload
        </button>
        <button
          onClick={() => router.push("/selfie")}
          className="font-mediumm sm:mx-8 bg-[#ED974B] bg-gradient-to-tr  py-[10px] sm:py-3 px-7 rounded-full text-white from-[#E77334] to-[#ED974B] sm:w-[90%] w-[100%] hover:from-[#ff6715] mt-7 "
        >
          Next
        </button>
      </div>
      {/* <button
        onClick={() => router.push("/login")}
        className="fixed hidden px-4 py-2 font-semibold uppercase bg-gray-200 rounded-lg md:left-12 md:bottom-8 hover:bg-gray-300 left-2 bottom-1 sm:inline-block"
      >
        Back
      </button>
      <button
        onClick={() => router.push("/selfie")}
        className="fixed z-10 hidden px-4 py-2 font-semibold uppercase bg-gray-200 rounded-lg md:right-12 md:bottom-8 hover:bg-gray-300 right-2 bottom-1 sm:inline-block"
      >
        Next
      </button> */}
      <ToastContainer />
    </div>
  );
};

export default UploadPicture;
